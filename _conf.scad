/***
 * TODO:
 * - Reinforce batt. conn. clamp area + inc. vert. tol.
 */

include <../BH-Lib/all.scad>;

// **************
// Printing

PRINT_LAYER_HEIGHT = 0.2;
PRINT_NOZZLE_DIA = 0.5;

TOLERANCE_CLOSE = 0.15;
TOLERANCE_FIT   = 0.2;
TOLERANCE_CLEAR = 0.25;

SKIN_MIN_THICKNESS = PRINT_LAYER_HEIGHT * 2;

// **************
// CONSTANTS

// JST_MALE_DIM = [18.75, 6.75, 4]; // TODO: move to lib
XT30_MALE_DIM = [13.75, 10.1, 5.2]; // incl. pins (x)

BATT_CONN_DIM = XT30_MALE_DIM;
BATT_DIM = [50, 32, 13];
BATT_STRAP_DIM = [15.3, 1.3];
BATT_WIRE_RAD = 2.5 / 2;

BUZZER_DIM = [9.5, 9.5, 5.25];

CAM_ANGLE = 15;
CAM_DIM = [CAM_RUNCAM_SWIFT_MICRO_DIM[0], CAM_RUNCAM_SWIFT_MICRO_DIM[1], -CAM_RUNCAM_SWIFT_MICRO_PIVOT_OFFSET + 10.3];
CAM_MOUNT_SCREW_DIM = SCREW_M2_SOCKET_DIM;
CAM_MOUNT_SCREW_SPACING = 16; // existing slots in frame
CAM_PIVOT_OFFSET = CAM_RUNCAM_SWIFT_MICRO_PIVOT_OFFSET;
CAM_SCREW_DIM = SCREW_M2_SOCKET_DIM;

ESC_BOARD_DIM = ESC_HAKRC_20_15AX4_BOARD_DIM;
ESC_DIM = ESC_HAKRC_20_15AX4_DIM;
ESC_HOLE_SPACING = ESC_HAKRC_20_15AX4_HOLE_SPACING;

FC_BOARD_DIM = FC_OMNIBUS_F4_MINI_BOARD_DIM;
FC_DIM = FC_OMNIBUS_F4_MINI_DIM;
FC_HOLE_SPACING = FC_OMNIBUS_F4_MINI_HOLE_SPACING;

FRAME_ARM_ANGLE = 17;
FRAME_ARM_WIDTH = 14;
FRAME_CENTER_OFFSET = 0;
FRAME_DIM = [77.75, 32]; // center portion
FRAME_HOLE_SPACING = [28, 24]; // existing FC mount holes in CF bottom plate
FRAME_SCREW_DEPTH = 3;
FRAME_SCREW_DIM = SCREW_M2_SOCKET_DIM;
FRAME_SCREW_BACK_POS = [
	-FRAME_DIM[0] / 2 + 5,
	22.5 / 2];
FRAME_SCREW_FRONT_POS = [
	FRAME_DIM[0] / 2 - 6,
	8];
FRAME_SCREW_SURROUND = 1;
FRAME_THICKNESS = 2;

LED_BOARD_DIM = [24, 6, 1];
LED_WIRE_RAD = 1.5 / 2;

// TODO: measure!? :)
// LED_ADHESIVE_THICKNESS = 1;
LED_DIM = [LED_BOARD_DIM[1] * 0.8, LED_BOARD_DIM[1] * 0.8, LED_BOARD_DIM[2] * 1.5];
LED_SPACING = (LED_BOARD_DIM[0] - LED_DIM[0] * 4) / 3;
// LED_MOUNT_CLIP_THICKNESS = 1;

MOTOR_HEIGHT = 12;
MOTOR_RAD = 7;
MOTOR_SPACING = [90, 111]; // ~ ?

PROP_RAD = 3 * MMPI / 2;

RX_ANT_WIRE_RAD = 0.85 / 2;
RX_BOARD_DIM = RX_FRSKY_XM_PLUS_BOARD_DIM;
RX_DIM = RX_FRSKY_XM_PLUS_DIM;

SIZE_DIA = 135;

VTX_ANT_DIM = 5G_ANT_UXII_DIM;
//VTX_ANT_MOUNT_DIM = VTX_VTX03_ANT_MOUNT_DIM;
VTX_ANT_MOUNT_DIM = [0, 0, 0];
VTX_ANT_WIRE_RAD = 1.75 / 2;
VTX_BOARD_DIM = VTX_EWRF_E7082CPRO_BOARD_DIM;
VTX_DIM = VTX_EWRF_E7082CPRO_DIM;
// VTX_BOARD_DIM = VTX_EWRF_E7092TM_BOARD_DIM;
// VTX_DIM = VTX_EWRF_E7092TM_DIM;

WINDSHIELD_RAD = 50;
WINDSHIELD_THICKNESS = 0.25;

ZIP_TIE_DIM = [3, 1.5];

// **************
// CONFIG

COMPONENT_CLEARANCE = 0.8;

BATT_POS = [-5, 0, -BATT_DIM[2] / 2 - 1];

CAM_MOUNT_ARM_THICKNESS = 1.5;
CAM_MOUNT_ARM_WIDTH = 3;
CAM_MOUNT_SCREW_DIM = SCREW_M2_SOCKET_DIM;
CAM_TILT_CLEARANCE = 3;

CANOPY_POS = [0, 0, TOLERANCE_FIT];

CANOPY_CAM_HOLE_RAD = CAM_RUNCAM_SWIFT_MICRO_RAD[2] + 4;
CANOPY_CLIP_HEIGHT = 4;
CANOPY_CLIP_THICKNESS = 1.2;
CANOPY_CLIP_WIDTH = 4;
CANOPY_CLIP_OFFSET = 4; // add some space for removal
CANOPY_LIP_DIM = [2, 2];
CANOPY_ROUNDING = 2;
CANOPY_SEAL_DEPTH = 2;
CANOPY_THICKNESS = 0.6;
CANOPY_VENT_R = 1; // set to 0 for no vents

FRAME_MOUNT_WALLS = 1;
FRAME_MOUNT_SKIN = 0.6; // TODO: RENAME; minimum XY thickness (e.g. batt strap surround roof)
FRAME_MOUNT_LIP_WIDTH = 2;

MOTOR_WIRE_RAD = 1.6 / 2;
MOTOR_WIRE_CUTOUT_DIM = [
	MOTOR_WIRE_RAD * 6 + TOLERANCE_CLOSE * 2,
	(MOTOR_WIRE_RAD + TOLERANCE_CLOSE) * 2];

STACK_MOUNT_BASE_THICKNESS = BATT_STRAP_DIM[1] + TOLERANCE_CLEAR + FRAME_MOUNT_SKIN;
STACK_MOUNT_LIP_THICKNESS = SKIN_MIN_THICKNESS;

// ***
// Components

BATT_CONN_SURROUND_DIM = [
	FRAME_DIM[0] / 2 + FRAME_SCREW_BACK_POS[0],
	BATT_CONN_DIM[1] + (TOLERANCE_FIT + FRAME_MOUNT_WALLS) * 2,
	BATT_CONN_DIM[2] + TOLERANCE_CLEAR + FRAME_MOUNT_SKIN,
	];

BATT_STRAP_POS = [0, 0, FRAME_THICKNESS];
BATT_STRAP_ROT = [0, 0, 90];
BATT_STRAP_SURROUND_DIM = [
	FRAME_DIM[1] - FRAME_MOUNT_WALLS / 2,
	BATT_STRAP_DIM[0] + (TOLERANCE_CLOSE + FRAME_MOUNT_WALLS) * 2,
	STACK_MOUNT_BASE_THICKNESS];

BUZZER_POS = [19, 0, BUZZER_DIM[2] / 2];
BUZZER_ROT = [0, 180];

ESC_CLEARANCE = ESC_DIM[0] + 4; // clearance req'd for motor wires
ESC_POS = [
	0,
	0,
	// BATT_STRAP_SURROUND_DIM[2] + (ESC_DIM[2] - ESC_BOARD_DIM[2]) / 2
	SKIN_MIN_THICKNESS + COMPONENT_CLEARANCE + (ESC_DIM[2] - ESC_BOARD_DIM[2]) / 2
	];
ESC_ROT = [0, 0, 90];

FC_MOUNT_HEIGHT = 4;
FC_POS = [
	ESC_POS[0],
	ESC_POS[1],
	ESC_POS[2] + ESC_BOARD_DIM[2] + FC_MOUNT_HEIGHT];
FC_ROT = [];

RX_ANT_MOUNT_DIM = [ZIP_TIE_DIM[0] + 2, 3, BATT_STRAP_SURROUND_DIM[2]];
RX_ANT_MOUNT_POS = [
	BATT_STRAP_SURROUND_DIM[1] / 2 + ZIP_TIE_DIM[0] / 2,
	FRAME_DIM[1] / 2 + ZIP_TIE_DIM[0] / 2 + TOLERANCE_CLEAR + CANOPY_THICKNESS,
	0];
RX_POS = [
	FC_POS[0] - 2,
	FC_POS[1],
	FC_POS[2] + FC_BOARD_DIM[2] + (FC_DIM[2] - FC_BOARD_DIM[2]) / 2 + COMPONENT_CLEARANCE + (RX_DIM[2] - RX_BOARD_DIM[2]) / 2];
RX_ROT = [0, 0, -90];

VTX_POS = [
	FC_POS[0] - 3,
	FC_POS[1],
	RX_POS[2] + RX_BOARD_DIM[2] + (RX_DIM[2] - RX_BOARD_DIM[2]) / 2 + (VTX_DIM[2] - VTX_BOARD_DIM[2]) / 2
	// + 1 // clearance for camera plug
	];
VTX_ROT = [0, 0, 90];

CAM_MOUNT_POS = [
	FC_POS[0] + FC_HOLE_SPACING[0] / 2,
	0,
	FC_POS[2] + FC_BOARD_DIM[2]];
CAM_POS = [
	(FC_POS[0] + FC_HOLE_SPACING[0] / 2 + CAM_TILT_CLEARANCE + CAM_DIM[2] / 2 + 0.5),
	0,
	CAM_TILT_CLEARANCE + CAM_DIM[1] / 2];
CAM_ROT = [0, -CAM_ANGLE];

CANOPY_CLIP_POS = [
	-(FRAME_HOLE_SPACING[0] / 2 + FRAME_SCREW_DIM[0] / 2 + FRAME_SCREW_SURROUND - CANOPY_CLIP_THICKNESS / 2) - CANOPY_CLIP_OFFSET,
	FRAME_HOLE_SPACING[1] / 2 - CANOPY_CLIP_WIDTH / 2];
// CANOPY_DIM = [55, FRAME_DIM[1], VTX_POS[2] + VTX_DIM[2] / 2 + 3];

// LED_POS = [
// 	-(FRAME_HOLE_SPACING[0] + FRAME_SCREW_DIM[0] + FRAME_SCREW_SURROUND - LED_BOARD_DIM[2]) / 2,
// 	0,
// 	LED_BOARD_DIM[1] / 2 + BATT_WIRE_RAD * 2];
LED_POS = [
	-FRAME_DIM[0] / 2 + CANOPY_THICKNESS + TOLERANCE_CLEAR + LED_DIM[2] + LED_BOARD_DIM[2] + 0.5,
	0,
	BATT_CONN_SURROUND_DIM[2] + TOLERANCE_CLOSE + LED_BOARD_DIM[1] / 2];
LED_ROT = [-70, 0, 90];

FRAME_BASE_SCREW_LENGTH = floor((CANOPY_SEAL_DEPTH + FRAME_THICKNESS) / 2) * 2;

STACK_MOUNT_HEIGHT = ESC_POS[2];
STACK_SCREW_BACK_LENGTH = round((VTX_POS[2] + VTX_BOARD_DIM[2]) / 2) * 2;
STACK_SCREW_FRONT_LENGTH = floor((CAM_MOUNT_POS[2] + CAM_MOUNT_ARM_WIDTH) / 2) * 2;

VTX_ANT_POS = [
	-22,
	0,
	3.5
];
VTX_ANT_ROT = [];

CANOPY_HEIGHT = FRAME_THICKNESS + VTX_POS[2] + (VTX_DIM[2] / 2 - VTX_BOARD_DIM[2]) + FRAME_SCREW_DIM[2] + TOLERANCE_CLEAR + CANOPY_THICKNESS;

WINDSHIELD_CUTOUT_DIM = [
	CANOPY_HEIGHT - FRAME_THICKNESS - CANOPY_THICKNESS - CANOPY_SEAL_DEPTH,
	CAM_DIM[0] * 2/3];
